<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Language" content="en-us" />

		<title>Django | Model Meta 选项 (Model Meta options) | Django 文档</title>

		<meta name="ROBOTS" content="ALL" />
		<meta http-equiv="imagetoolbar" content="no" />
		<meta name="MSSmartTagsPreventParsing" content="true" />
		<meta name="Copyright" content="This site's design and contents Copyright (c) 2005  Lawrence Journal-World." />

		<meta name="keywords" content="Python, Django, framework, open-source" />
		<meta name="description" content="Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design." />

		<link href="http://media.djangoproject.com/css/base.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="http://media.djangoproject.com/css/print.css" rel="stylesheet" type="text/css" media="print" />
      
  
  <style type="text/css" media="screen">
    #docs-search {
      color: #000;
      float: right;
    }
    #docs-search form {
      font-size: 92%;
      margin: 0;
      padding: 1em 1em 0;
      white-space: nowrap;
    }
    form.search ul {
      list-style: none;
      margin: 0;
      padding: 0;
    }
    form.search li {
      display: inline;
      padding-right: 1em;
    }
    form.search .query {
      width: 18em;
    }
  </style>
  <link rel="stylesheet" href="http://media.djangoproject.com/css/pygments.css" type="text/css" />

	</head>

	<body id="documentation" class="default">

	<div id="container">
		<div id="header">
			<h1 id="logo"><a href="http://www.djangoproject.com/"><img src="http://media.djangoproject.com/img/site/hdr_logo.gif" alt="Django" /></a></h1>
			<ul id="nav-global">
				<li id="nav-homepage"><a href="http://www.djangoproject.com/">Home</a></li>
				<li id="nav-download"><a href="http://www.djangoproject.com/download/">Download</a></li>
				<li id="nav-documentation"><a href="http://docs.djangoproject.com/">Documentation</a></li>
				<li id="nav-weblog"><a href="http://www.djangoproject.com/weblog/">Weblog</a></li>
				<li id="nav-community"><a href="http://www.djangoproject.com/community/">Community</a></li>
				<li id="nav-code"><a href="http://code.djangoproject.com/">Code</a></li>
			</ul>
		</div>
		<!-- END Header -->
		<div id="billboard">
  <h2><a href="../../../index.html">Django documentation</a></h2>
</div>
		<div id="columnwrap">
			
		<div id="content-main">
		


  <h2 class="deck">
  
    当前文档仅适用于 Django SVN 版本，与上个版本有显著不同。上个版本文档请查阅：
      <a href="http://docs.djangoproject.com/en/1.0/ref/models/options/">Django 1.0</a>
  
  </h2>
  <div class="section" id="s-model-meta-options">
<span id="s-ref-models-options"></span><span id="model-meta-options"></span><span id="ref-models-options"></span><h1>Model Meta 选项 (Model <tt class="docutils literal"><span class="pre">Meta</span></tt> options)<a class="headerlink" href="index.html#model-meta-options" title="Permalink to this headline">¶</a></h1>
<p>本文介绍 <tt class="docutils literal"><span class="pre">class</span> <span class="pre">Meta</span></tt> 内嵌类的所有 <a class="reference external" href="../../../topics/db/models/index.html#meta-options"><em>元数据选项 (metadata options)</em></a> 。</p>
<div class="section" id="s-available-meta-options">
<span id="available-meta-options"></span><h2> Meta 选项(Available <tt class="docutils literal"><span class="pre">Meta</span></tt> options)<a class="headerlink" href="index.html#available-meta-options" title="Permalink to this headline">¶</a></h2>
<div class="section" id="s-abstract">
<span id="abstract"></span><h3><tt class="docutils literal"><span class="pre">abstract</span></tt><a class="headerlink" href="index.html#abstract" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.abstract">
<!--[django.db.models.Options.abstract]--><tt class="descclassname">Options.</tt><tt class="descname">abstract</tt><a class="headerlink" href="index.html#django.db.models.Options.abstract" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>为 <tt class="xref docutils literal"><span class="pre">True</span></tt>， 就表示 model 是 <a class="reference external" href="../../../topics/db/models/index.html#abstract-base-classes"><em>抽象基类 (abstract base class)</em></a>.</p>
</div>
<div class="section" id="s-app-label">
<span id="app-label"></span><h3><tt class="docutils literal"><span class="pre">app_label</span></tt><a class="headerlink" href="index.html#app-label" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.app_label">
<!--[django.db.models.Options.app_label]--><tt class="descclassname">Options.</tt><tt class="descname">app_label</tt><a class="headerlink" href="index.html#django.db.models.Options.app_label" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>如果你的 model 定义在默认的 <tt class="docutils literal"><span class="pre">models.py</span></tt> 之外(比如，你现在用的 model 在 <tt class="docutils literal"><span class="pre">myapp.models</span></tt> 子模块当中)，你必须告诉 Django 该 model 属于哪个应用：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">app_label</span> <span class="o">=</span> <span class="s">&#39;myapp&#39;</span>
</pre></div>
</div>
</div>
<div class="section" id="s-db-table">
<span id="db-table"></span><h3><tt class="docutils literal"><span class="pre">db_table</span></tt><a class="headerlink" href="index.html#db-table" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.db_table">
<!--[django.db.models.Options.db_table]--><tt class="descclassname">Options.</tt><tt class="descname">db_table</tt><a class="headerlink" href="index.html#django.db.models.Options.db_table" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>该 model 所用的数据表的名称：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">db_table</span> <span class="o">=</span> <span class="s">&#39;music_album&#39;</span>
</pre></div>
</div>
<div class="section" id="s-id1">
<span id="s-table-names"></span><span id="id1"></span><span id="table-names"></span><h4>数据表名称 (Table names)<a class="headerlink" href="index.html#id1" title="Permalink to this headline">¶</a></h4>
<p>为了节省时间，Django 会自动指定数据表名称，规则是在应用名称的结尾加一个下划线，再加该 model 的名称。</p>
<p>举个例子， <tt class="docutils literal"><span class="pre">bookstore</span></tt> 应用(使用 <tt class="docutils literal"><span class="pre">manage.py</span> <span class="pre">startapp</span> <span class="pre">bookstore</span></tt> 创建)，里面有个名为 <span class="pre">Book</span></tt> 的 model ，那数据表的名称就是 <tt class="docutils literal"><span class="pre">bookstore_book</span></tt> 。</p>

<p>数据表名称可以是 SQL 保留字，也可以包含不允许出现在 Python 变量中的特殊字符(比如连字符)，这是因为 Django 会自动给列名和表名添加引号。</p>
</div>
</div>
<div class="section" id="s-db-tablespace">
<span id="db-tablespace"></span><h3><tt class="docutils literal"><span class="pre">db_tablespace</span></tt><a class="headerlink" href="index.html#db-tablespace" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.db_tablespace">
<!--[django.db.models.Options.db_tablespace]--><tt class="descclassname">Options.</tt><tt class="descname">db_tablespace</tt><a class="headerlink" href="index.html#django.db.models.Options.db_tablespace" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>


<div class="versionadded">
<span class="title">这部分是在 Django 1.0 新增的：</span> <a class="reference external" href="../../../releases/1.0/index.html#releases-1-0"><em>请查看版本文档</em></a></div>
<p>该 model 所用的表空间。如果数据库不支持表空间，Django 就会忽略该选项。</p>
</div>
<div class="section" id="s-get-latest-by">
<span id="get-latest-by"></span><h3><tt class="docutils literal"><span class="pre">get_latest_by</span></tt><a class="headerlink" href="index.html#get-latest-by" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.get_latest_by">
<!--[django.db.models.Options.get_latest_by]--><tt class="descclassname">Options.</tt><tt class="descname">get_latest_by</tt><a class="headerlink" href="index.html#django.db.models.Options.get_latest_by" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>model 中某个 <a title="django.db.models.DateField" class="reference external" href="../fields/index.html#django.db.models.DateField"><tt class="xref docutils literal"><span class="pre">DateField</span></tt></a> 或 <a title="django.db.models.DateTimeField" class="reference external" href="../fields/index.html#django.db.models.DateTimeField"><tt class="xref docutils literal"><span class="pre">DateTimeField</span></tt></a> 的名称，在 model 的 <a title="django.db.models.Manager" class="reference external" href="../../../topics/db/managers/index.html#django.db.models.Manager"><tt class="xref docutils literal"><span class="pre">Manager</span></tt></a> 上使用 <tt class="xref docutils literal"><span class="pre">latest</span></tt> 方法时要用它作为排序字段。</p>
<p>例如：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">get_latest_by</span> <span class="o">=</span> <span class="s">&quot;order_date&quot;</span>
</pre></div>
</div>
<p>详见 <tt class="xref docutils literal"><span class="pre">latest()</span></tt> 。</p>
</div>
<div class="section" id="s-managed">
<span id="managed"></span><h3><tt class="docutils literal"><span class="pre">managed</span></tt><a class="headerlink" href="index.html#managed" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.managed">
<!--[django.db.models.Options.managed]--><tt class="descclassname">Options.</tt><tt class="descname">managed</tt><a class="headerlink" href="index.html#django.db.models.Options.managed" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<div class="versionadded">
<span class="title">这部分是在 Django 1.1 是新增的：</span> <a class="reference external" href="../../../releases/1.1/index.html#releases-1-1"><em>请查看版本文档</em></a></div>
<p>默认值为 <tt class="xref docutils literal"><span class="pre">True</span></tt>，这意味着该 model 可以用 <a class="reference external" href="../../django-admin/index.html#djadmin-syncdb"><tt class="xref docutils literal"><span class="pre">syncdb</span></tt></a> 和 <a class="reference external" href="../../django-admin/index.html#djadmin-reset"><tt class="xref docutils literal"><span class="pre">reset</span></tt></a> 命令来创建和移除对应的数据表，换句话说，Django 管理了数据表的生命周期。</p>
<p>如果是 <tt class="xref docutils literal"><span class="pre">False</span></tt>，Django 就不会为当前 model 创建和删除数据表。通常用在 model 要表示某个已存在的数据表或是视图的场合。使用非托管 model (<tt class="docutils literal"><span class="pre">managed</span></tt> = <tt class="xref docutils literal"><span class="pre">False</span></tt>)和普通 model 的区别在于：</p>
<ol class="arabic">
<li><p class="first">如果你没有声明主键字段，就得在 model 中手动添加一个自增主键字段。为了让后来的程序员在阅读代码时不产生误解，建议您在托管 model 中对数据表中的所有的字段都进行定义。</p>
</li>
<li><p class="first">如果两个非托管 model 之间 (<tt class="docutils literal"><span class="pre">managed=False</span></tt>) 使用 <a title="django.db.models.ManyToManyField" class="reference external" href="../fields/index.html#django.db.models.ManyToManyField"><tt class="xref docutils literal"><span class="pre">ManyToManyField</span></tt></a>  相关联，就不会创建存储多对多关系的中间表。但是普通 model 和非托管 model 之间的多对多关系仍然会创建中间表。</p>
<p>如果你要更改默认的行为，就得显式定义中介 model 来创建中间表(该 model 要启用managed=True)，然后在你的源 model 上令 <a title="django.db.models.ManyToManyField.through" class="reference external" href="../fields/index.html#django.db.models.ManyToManyField.through"><tt class="xref docutils literal"><span class="pre">ManyToManyField.through</span></tt></a> 指向中介 model ，就能实现定制的多对多关系。</p>
</li>
</ol>
<p>如果你的测试包含非托管 model (<tt class="docutils literal"><span class="pre">managed=False</span></tt>)，那么在测试之前，要确保你已经创建了正确的数据表。 </p>
<p>如果你想更改 model 类中某个 Python 层级的行为，你可以令 <tt class="docutils literal"><span class="pre">managed=False</span></tt> ，然后创建 model 的拷贝，在拷贝中定义新的行为。不过有个更好的办法，就是使用 <a class="reference external" href="../../../topics/db/models/index.html#proxy-models"><em>代理 model (Proxy models)</em></a>.</p>
</div>
<div class="section" id="s-order-with-respect-to">
<span id="order-with-respect-to"></span><h3><tt class="docutils literal"><span class="pre">order_with_respect_to</span></tt><a class="headerlink" href="index.html#order-with-respect-to" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.order_with_respect_to">
<!--[django.db.models.Options.order_with_respect_to]--><tt class="descclassname">Options.</tt><tt class="descname">order_with_respect_to</tt><a class="headerlink" href="index.html#django.db.models.Options.order_with_respect_to" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>根据给定的字段对 model 排序。在关联关系中，它经常用在根据目标对象对源对象排序的场合。举个例子，一个 <tt class="docutils literal"><span class="pre">Answer</span></tt> 只关联一个 <tt class="docutils literal"><span class="pre">Question</span></tt> 对象，而一个 question 对象却可以关联多个 answer对象。根据 question 对 answer 排序：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Answer</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">question</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Question</span><span class="p">)</span>
    <span class="c"># ...</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">order_with_respect_to</span> <span class="o">=</span> <span class="s">&#39;question&#39;</span>
</pre></div>
</div>
</div>
<div class="section" id="s-ordering">
<span id="ordering"></span><h3><tt class="docutils literal"><span class="pre">ordering</span></tt><a class="headerlink" href="index.html#ordering" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.ordering">
<!--[django.db.models.Options.ordering]--><tt class="descclassname">Options.</tt><tt class="descname">ordering</tt><a class="headerlink" href="index.html#django.db.models.Options.ordering" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>该对象的默认排序项，它决定了对象列表的排序：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;-order_date&#39;</span><span class="p">]</span>
</pre></div>
</div>
<p>该项是一个字符串元组或列表。如果在字符串前面有一个&quot;-&quot;负号，就表示降序排列。没有&quot;-&quot;负号，就表示升序排列。有一个&quot;?&quot;问号，就表示随机排序。</p>
<div class="admonition note">
<p class="first admonition-title">注意</p>
<p class="last">无论 <a title="django.db.models.Options.ordering" class="reference internal" href="index.html#django.db.models.Options.ordering"><tt class="xref docutils literal"><span class="pre">ordering</span></tt></a> 中有多少字段，Django 管理后台只使用第一个字符串。</p>
</div>
<p>举个例子，要根据 <tt class="docutils literal"><span class="pre">pub_date</span></tt> 字段做升序排列，使用：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;pub_date&#39;</span><span class="p">]</span>
</pre></div>
</div>
<p>根据 <tt class="docutils literal"><span class="pre">pub_date</span></tt> 字段做降序排列，使用：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;-pub_date&#39;</span><span class="p">]</span>
</pre></div>
</div>
<p>先根据 <tt class="docutils literal"><span class="pre">pub_date</span></tt> 降序，再根据 <tt class="docutils literal"><span class="pre">author</span></tt> 升序，使用：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;-pub_date&#39;</span><span class="p">,</span> <span class="s">&#39;author&#39;</span><span class="p">]</span>
</pre></div>
</div>
</div>
<div class="section" id="s-permissions">
<span id="permissions"></span><h3><tt class="docutils literal"><span class="pre">permissions</span></tt><a class="headerlink" href="index.html#permissions" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.permissions">
<!--[django.db.models.Options.permissions]--><tt class="descclassname">Options.</tt><tt class="descname">permissions</tt><a class="headerlink" href="index.html#django.db.models.Options.permissions" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>在创建对象时，添加到权限表当中的附加权限信息。Django 自动为每个设置了 <tt class="docutils literal"><span class="pre">admin</span></tt>  的对象创建了添加，删除和修改的权限。下面这个例子展示了如何添加一个附加的权限 <tt class="docutils literal"><span class="pre">can_deliver_pizzas</span></tt> ：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">permissions</span> <span class="o">=</span> <span class="p">((</span><span class="s">&quot;can_deliver_pizzas&quot;</span><span class="p">,</span> <span class="s">&quot;Can deliver pizzas&quot;</span><span class="p">),)</span>
</pre></div>
</div>
<p>该项可以是二元组，也可以是列表 <tt class="docutils literal"><span class="pre">(permission_code,</span>
<span class="pre">human_readable_permission_name)</span></tt> 。</p>
</div>
<div class="section" id="s-proxy">
<span id="proxy"></span><h3><tt class="docutils literal"><span class="pre">proxy</span></tt><a class="headerlink" href="index.html#proxy" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.proxy">
<!--[django.db.models.Options.proxy]--><tt class="descclassname">Options.</tt><tt class="descname">proxy</tt><a class="headerlink" href="index.html#django.db.models.Options.proxy" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<div class="versionadded">
<span class="title">这部分是在 Django 1.1 中新增的：</span> <a class="reference external" href="../../../releases/1.1/index.html#releases-1-1"><em>请查看版本文档</em></a></div>
<p>如果设为 <tt class="xref docutils literal"><span class="pre">True</span></tt>，表示该 model 是父类的 <a class="reference external" href="../../../topics/db/models/index.html#proxy-models"><em>代理 model (proxy model)</em></a> 。</p>
</div>
<div class="section" id="s-unique-together">
<span id="unique-together"></span><h3><tt class="docutils literal"><span class="pre">unique_together</span></tt><a class="headerlink" href="index.html#unique-together" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.unique_together">
<!--[django.db.models.Options.unique_together]--><tt class="descclassname">Options.</tt><tt class="descname">unique_together</tt><a class="headerlink" href="index.html#django.db.models.Options.unique_together" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>用来设置的不重复的字段组合：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">unique_together</span> <span class="o">=</span> <span class="p">((</span><span class="s">&quot;driver&quot;</span><span class="p">,</span> <span class="s">&quot;restaurant&quot;</span><span class="p">),)</span>
</pre></div>
</div>
<p>它是一个字段名称的列表，列表内的字段组合在数据库中是唯一，不重复的，也就是说不可以有两个对象，它们在列表中的字段值是完全相同的。它被用在 Django 的管理后台，在数据库层级约束数据。(比如，在 <tt class="docutils literal"><span class="pre">CREATE</span> <span class="pre">TABLE</span></tt> 语句中包含 <tt class="docutils literal"><span class="pre">UNIQUE</span></tt> 语句)</p>
<div class="versionadded">
<span class="title">这部分是在 Django 1.0 中新增的：</span> <a class="reference external" href="../../../releases/1.0/index.html#releases-1-0"><em>请查看版本文档</em></a></div>
<p>为了使用方便，你可以赋给该项一个单独的字段列表，这表示列表内每个字段的值都必须是全表唯一的：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">unique_together</span> <span class="o">=</span> <span class="p">(</span><span class="s">&quot;driver&quot;</span><span class="p">,</span> <span class="s">&quot;restaurant&quot;</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="section" id="s-verbose-name">
<span id="verbose-name"></span><h3><tt class="docutils literal"><span class="pre">verbose_name</span></tt><a class="headerlink" href="index.html#verbose-name" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.verbose_name">
<!--[django.db.models.Options.verbose_name]--><tt class="descclassname">Options.</tt><tt class="descname">verbose_name</tt><a class="headerlink" href="index.html#django.db.models.Options.verbose_name" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>易于理解和表述的对象名称--单数形式的自述名：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">verbose_name</span> <span class="o">=</span> <span class="s">&quot;pizza&quot;</span>
</pre></div>
</div>
<p>如果没有赋值，Django 会用该 model 名称的分词形式做为自述名：
<tt class="docutils literal"><span class="pre">CamelCase</span></tt> 变成 <tt class="docutils literal"><span class="pre">camel</span> <span class="pre">case</span></tt>。</p>
</div>
<div class="section" id="s-verbose-name-plural">
<span id="verbose-name-plural"></span><h3><tt class="docutils literal"><span class="pre">verbose_name_plural</span></tt><a class="headerlink" href="index.html#verbose-name-plural" title="Permalink to this headline">¶</a></h3>
<dl class="attribute">
<dt id="django.db.models.Options.verbose_name_plural">
<!--[django.db.models.Options.verbose_name_plural]--><tt class="descclassname">Options.</tt><tt class="descname">verbose_name_plural</tt><a class="headerlink" href="index.html#django.db.models.Options.verbose_name_plural" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<p>自述名的复数形式：</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s">&quot;stories&quot;</span>
</pre></div>
</div>
<p>如果没有赋值，Django 使用 <a title="django.db.models.Options.verbose_name" class="reference internal" href="index.html#django.db.models.Options.verbose_name"><tt class="xref docutils literal"><span class="pre">verbose_name</span></tt></a> + <tt class="docutils literal"><span class="pre">&quot;s&quot;</span></tt> 作为自述名的复数形式。</p>
</div>
</div>
</div>



<div id="content-secondary">
<h2 id="comments">欢迎更正和反馈</h2>
  <p>发现翻译错误请与译者联系</p>
  <ul>
    <li>
      转载时请保留英文网址和译者信息。
      </li>
    <li>
      译文首发：<a href='http://www.koder.me'>匠人网</a> [<a href="http://www.koder.me">www.koder.me</a>]
    </li>
    <li>
      英文网址：<a href="http://docs.djangoproject.com/en/1.1/ref/models/options/#ref-models-options">http://docs.djangoproject.com/en/1.1/ref/models/options/#ref-models-options</a>
    </li>
    <li>
      译者信息：WrongWay [<a href="http://www.wrongway.me">www.wrongway.me</a>]
    </li>
    <li>
      译文参考：WoodPecker 的 Django 团队 Weizhong 译 <a href="http://www.woodpecker.org.cn/obp/django/django-faq/model-api.html">Model API 参考</a>；<br/>
      　　　　　JavaEye 的 剑事 译 <a href="http://jfy3d.javaeye.com/blog/336216">Django 1.0 中文文档-----元选项</a>。
    </li>
  </ul>  

</div>

		</div>
		<!-- END #content-main -->
		<div id="content-related" class="sidebar">
		
  
    <h2>内容</h2>
    
      <ul>
<li><a class="reference external" href="index.html">Model Meta 选项</a> <tt>(Model Meta options)</tt><ul>
<li><a class="reference external" href="index.html#available-meta-options">可用的 Meta 选项</a> <tt>(Available Meta options)</tt><ul>
<li><a class="reference external" href="index.html#abstract"><tt class="docutils literal"><span class="pre">abstract</span></tt></a></li>
<li><a class="reference external" href="index.html#app-label"><tt class="docutils literal"><span class="pre">app_label</span></tt></a></li>
<li><a class="reference external" href="index.html#db-table"><tt class="docutils literal"><span class="pre">db_table</span></tt></a><ul>
<li><a class="reference external" href="index.html#id1">表名称</a> <tt>Tabe names</tt></li>
</ul>
</li>
<li><a class="reference external" href="index.html#db-tablespace"><tt class="docutils literal"><span class="pre">db_tablespace</span></tt></a></li>
<li><a class="reference external" href="index.html#get-latest-by"><tt class="docutils literal"><span class="pre">get_latest_by</span></tt></a></li>
<li><a class="reference external" href="index.html#managed"><tt class="docutils literal"><span class="pre">managed</span></tt></a></li>
<li><a class="reference external" href="index.html#order-with-respect-to"><tt class="docutils literal"><span class="pre">order_with_respect_to</span></tt></a></li>
<li><a class="reference external" href="index.html#ordering"><tt class="docutils literal"><span class="pre">ordering</span></tt></a></li>
<li><a class="reference external" href="index.html#permissions"><tt class="docutils literal"><span class="pre">permissions</span></tt></a></li>
<li><a class="reference external" href="index.html#proxy"><tt class="docutils literal"><span class="pre">proxy</span></tt></a></li>
<li><a class="reference external" href="index.html#unique-together"><tt class="docutils literal"><span class="pre">unique_together</span></tt></a></li>
<li><a class="reference external" href="index.html#verbose-name"><tt class="docutils literal"><span class="pre">verbose_name</span></tt></a></li>
<li><a class="reference external" href="index.html#verbose-name-plural"><tt class="docutils literal"><span class="pre">verbose_name_plural</span></tt></a></li>
</ul>
</li>
</ul>
</li>
</ul>

    
  
  
  
    
    <h2>浏览</h2>
    <ul>
      
        
          <li>前一篇： <a href="../relations/index.html">关联对象参考</a> <tt>(Related objects reference)</tt></li>
        
        
          <li>后一篇： <a href="../instances/index.html">Model 实例参考</a> <tt>(Model instance reference)</tt></li>
        
        <li><a href="../../../contents/index.html">内容表</a> <tt>(Table of contents)</tt></li>
        
          <li><a href="../../../genindex/index.html">索引</a> <tt>(General Index)</tt></li>
        
          <li><a href="../../../modindex/index.html">模块索引</a> <tt>(Global Module Index)</tt></li>
        
      
    </ul>
  
  
  
    <h2>你的位置：</h2>
    <ul>
      
        <li>
          <a href="../../../index.html">Django 文档</a> <tt>(Django dev documentation)</tt>
          
            <ul><li><a href="../../index.html">API 参考</a> <tt>(API Reference)</tt>
          
            <ul><li><a href="../index.html">模型</a> <tt>(Models)</tt>
          
          <ul><li>Model Meta 选项 (Model <tt class="docutils literal"><span class="pre">Meta</span></tt> options)</li></ul>
          </li></ul></li></ul>
        </li>
      
    </ul>
  
  
  
    <h3>更新时间：</h3>
    <div>2009 年 11 月 19 日 下午 4 时 (<a href="http://www.timeanddate.com/worldclock/city.html?n=64">CDT</a>)</div>
  

		</div>
		<!-- END #content-related -->

		</div>
		<!-- END #content -->
		<div id="footer">
			<p>&copy; 2005-2009 <a href="http://www.djangoproject.com/foundation/">Django Software Foundation</a> unless otherwise noted. Django is a registered trademark of the Django Software Foundation. 

			</p>
		</div>
		<!-- END #footer -->
	</div>
	<!-- END #container -->
	</body>
</html>

