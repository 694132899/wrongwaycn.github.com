<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Language" content="en-us" />

		<title>Django | Django shortcut functions | Django Documentation</title>

		<meta name="ROBOTS" content="ALL" />
		<meta http-equiv="imagetoolbar" content="no" />
		<meta name="MSSmartTagsPreventParsing" content="true" />
		<meta name="Copyright" content="This site's design and contents Copyright (c) 2005  Lawrence Journal-World." />

		<meta name="keywords" content="Python, Django, framework, open-source" />
		<meta name="description" content="Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design." />

		<link href="http://media.djangoproject.com/css/base.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="http://media.djangoproject.com/css/print.css" rel="stylesheet" type="text/css" media="print" />
      
  
  <style type="text/css" media="screen">
    #docs-search {
      color: #000;
      float: right;
    }
    #docs-search form {
      font-size: 92%;
      margin: 0;
      padding: 1em 1em 0;
      white-space: nowrap;
    }
    form.search ul {
      list-style: none;
      margin: 0;
      padding: 0;
    }
    form.search li {
      display: inline;
      padding-right: 1em;
    }
    form.search .query {
      width: 18em;
    }
  </style>
  <link rel="stylesheet" href="http://media.djangoproject.com/css/pygments.css" type="text/css" />

	</head>

	<body id="documentation" class="default">

	<div id="container">
		<div id="header">
			<h1 id="logo"><a href="http://www.djangoproject.com/"><img src="http://media.djangoproject.com/img/site/hdr_logo.gif" alt="Django" /></a></h1>
			<ul id="nav-global">
				<li id="nav-homepage"><a href="http://www.djangoproject.com/">Home</a></li>
				<li id="nav-download"><a href="http://www.djangoproject.com/download/">Download</a></li>
				<li id="nav-documentation"><a href="http://docs.djangoproject.com/">Documentation</a></li>
				<li id="nav-weblog"><a href="http://www.djangoproject.com/weblog/">Weblog</a></li>
				<li id="nav-community"><a href="http://www.djangoproject.com/community/">Community</a></li>
				<li id="nav-code"><a href="http://code.djangoproject.com/">Code</a></li>
			</ul>
		</div>
		<!-- END Header -->
		<div id="billboard">
  <h2><a href="../../../index.html">Django documentation</a></h2>
</div>
		<div id="columnwrap">
			
		<div id="content-main">
		


  <h2 class="deck">
  
    This document is for Django's SVN release, which can be
    significantly different from previous releases. Get old docs here: 
      <a href="http://docs.djangoproject.com/en/1.0/topics/http/shortcuts/">Django 1.0</a>
  
  </h2>
  <div class="section" id="s-module-django.shortcuts">
<span id="s-topics-http-shortcuts"></span><span id="module-django.shortcuts"></span><span id="topics-http-shortcuts"></span><h1>Django shortcut functions<a class="headerlink" href="index.html#module-django.shortcuts" title="Permalink to this headline">¶</a></h1>
<p id="index-56">The package <tt class="docutils literal"><span class="pre">django.shortcuts</span></tt> collects helper functions and classes that
&#8220;span&#8221; multiple levels of MVC. In other words, these functions/classes
introduce controlled coupling for convenience&#8217;s sake.</p>
<div class="section" id="s-render-to-response">
<span id="render-to-response"></span><h2><tt class="docutils literal"><span class="pre">render_to_response</span></tt><a class="headerlink" href="index.html#render-to-response" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.render_to_response">
<!--[django.shortcuts.render_to_response]--><tt class="descname">render_to_response</tt>(<em>template</em><span class="optional">[</span>, <em>dictionary</em><span class="optional">]</span><span class="optional">[</span>, <em>context_instance</em><span class="optional">]</span><span class="optional">[</span>, <em>mimetype</em><span class="optional">]</span>)<a class="headerlink" href="index.html#django.shortcuts.render_to_response" title="Permalink to this definition">¶</a></dt>
<dd>Renders a given template with a given context dictionary and returns an
<a title="django.http.HttpResponse" class="reference external" href="../../../ref/request-response/index.html#django.http.HttpResponse"><tt class="xref docutils literal"><span class="pre">HttpResponse</span></tt></a> object with that rendered text.</dd></dl>

<div class="section" id="s-required-arguments">
<span id="required-arguments"></span><h3>Required arguments<a class="headerlink" href="index.html#required-arguments" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">template</span></tt></dt>
<dd>The full name of a template to use or sequence of template names.</dd>
</dl>
</div>
<div class="section" id="s-optional-arguments">
<span id="optional-arguments"></span><h3>Optional arguments<a class="headerlink" href="index.html#optional-arguments" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">dictionary</span></tt></dt>
<dd>A dictionary of values to add to the template context. By default, this
is an empty dictionary. If a value in the dictionary is callable, the
view will call it just before rendering the template.</dd>
<dt><tt class="docutils literal"><span class="pre">context_instance</span></tt></dt>
<dd><p class="first">The context instance to render the template with. By default, the template
will be rendered with a <tt class="docutils literal"><span class="pre">Context</span></tt> instance (filled with values from
<tt class="docutils literal"><span class="pre">dictionary</span></tt>). If you need to use <a class="reference external" href="../../../ref/templates/api/index.html#subclassing-context-requestcontext"><em>context processors</em></a>, render the template with a
<tt class="docutils literal"><span class="pre">RequestContext</span></tt> instance instead. Your code might look something like
this:</p>
<div class="last highlight-python"><div class="highlight"><pre><span class="k">return</span> <span class="n">render_to_response</span><span class="p">(</span><span class="s">&#39;my_template.html&#39;</span><span class="p">,</span>
                          <span class="n">my_data_dictionary</span><span class="p">,</span>
                          <span class="n">context_instance</span><span class="o">=</span><span class="n">RequestContext</span><span class="p">(</span><span class="n">request</span><span class="p">))</span>
</pre></div>
</div>
</dd>
<dt><tt class="docutils literal"><span class="pre">mimetype</span></tt></dt>
<dd><div class="first versionadded">
<span class="title">New in Django 1.0:</span> <a class="reference external" href="../../../releases/1.0/index.html#releases-1-0"><em>Please, see the release notes</em></a></div>
<p class="last">The MIME type to use for the resulting document. Defaults to the value of
the <a class="reference external" href="../../../ref/settings/index.html#setting-DEFAULT_CONTENT_TYPE"><tt class="xref docutils literal"><span class="pre">DEFAULT_CONTENT_TYPE</span></tt></a> setting.</p>
</dd>
</dl>
</div>
<div class="section" id="s-example">
<span id="example"></span><h3>Example<a class="headerlink" href="index.html#example" title="Permalink to this headline">¶</a></h3>
<p>The following example renders the template <tt class="docutils literal"><span class="pre">myapp/index.html</span></tt> with the
MIME type <tt class="docutils literal"><span class="pre">application/xhtml+xml</span></tt>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.shortcuts</span> <span class="k">import</span> <span class="n">render_to_response</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="k">return</span> <span class="n">render_to_response</span><span class="p">(</span><span class="s">&#39;myapp/index.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&quot;foo&quot;</span><span class="p">:</span> <span class="s">&quot;bar&quot;</span><span class="p">},</span>
        <span class="n">mimetype</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.http</span> <span class="k">import</span> <span class="n">HttpResponse</span>
<span class="k">from</span> <span class="nn">django.template</span> <span class="k">import</span> <span class="n">Context</span><span class="p">,</span> <span class="n">loader</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="n">get_template</span><span class="p">(</span><span class="s">&#39;myapp/template.html&#39;</span><span class="p">)</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">Context</span><span class="p">({</span><span class="s">&#39;foo&#39;</span><span class="p">:</span> <span class="s">&#39;bar&#39;</span><span class="p">})</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
        <span class="n">mimetype</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="s-redirect">
<span id="redirect"></span><h2><tt class="docutils literal"><span class="pre">redirect</span></tt><a class="headerlink" href="index.html#redirect" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.redirect">
<!--[django.shortcuts.redirect]--><tt class="descname">redirect</tt>(<em>to</em><span class="optional">[</span>, <em>permanent=False</em><span class="optional">]</span>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="index.html#django.shortcuts.redirect" title="Permalink to this definition">¶</a></dt>
<dd><div class="versionadded">
<span class="title">New in Django 1.1:</span> <a class="reference external" href="../../../releases/1.1/index.html#releases-1-1"><em>Please, see the release notes</em></a></div>
<p>Returns an HttpResponseRedirect to the apropriate URL for the arguments
passed.</p>
<p>The arguments could be:</p>
<ul class="simple">
<li>A model: the model's <cite>get_absolute_url()</cite> function will be called.</li>
<li>A view name, possibly with arguments: <cite>urlresolvers.reverse()</cite> will
be used to reverse-resolve the name.</li>
<li>A URL, which will be used as-is for the redirect location.</li>
</ul>
<p>By default issues a temporary redirect; pass permanent=True to issue a
permanent redirect</p>
</dd></dl>

<div class="section" id="s-examples">
<span id="examples"></span><h3>Examples<a class="headerlink" href="index.html#examples" title="Permalink to this headline">¶</a></h3>
<p>You can use the <a title="django.shortcuts.redirect" class="reference internal" href="index.html#django.shortcuts.redirect"><tt class="xref docutils literal"><span class="pre">redirect()</span></tt></a> function in a number of ways.</p>
<ol class="arabic">
<li><p class="first">By passing some object; that object's
<a title="django.db.models.Model.get_absolute_url" class="reference external" href="../../../ref/models/instances/index.html#django.db.models.Model.get_absolute_url"><tt class="xref docutils literal"><span class="pre">get_absolute_url()</span></tt></a> method will be called
to figure out the redirect URL:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="nb">object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>
</pre></div>
</div>
</li>
<li><p class="first">By passing the name of a view and optionally some positional or
keyword arguments; the URL will be reverse resolved using the
<a title="django.core.urlresolvers.reverse" class="reference external" href="../urls/index.html#django.core.urlresolvers.reverse"><tt class="xref docutils literal"><span class="pre">reverse()</span></tt></a> method:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;some-view-name&#39;</span><span class="p">,</span> <span class="n">foo</span><span class="o">=</span><span class="s">&#39;bar&#39;</span><span class="p">)</span>
</pre></div>
</div>
</li>
<li><p class="first">By passing a hardcoded URL to redirect to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;/some/url/&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>This also works with full URLs:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;http://example.com/&#39;</span><span class="p">)</span>
</pre></div>
</div>
</li>
</ol>
<p>By default, <a title="django.shortcuts.redirect" class="reference internal" href="index.html#django.shortcuts.redirect"><tt class="xref docutils literal"><span class="pre">redirect()</span></tt></a> returns a temporary redirect. All of the above
forms accept a <tt class="docutils literal"><span class="pre">permanent</span></tt> argument; if set to <tt class="xref docutils literal"><span class="pre">True</span></tt> a permanent redirect
will be returned:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="nb">object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="nb">object</span><span class="p">,</span> <span class="n">permanent</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="s-get-object-or-404">
<span id="get-object-or-404"></span><h2><tt class="docutils literal"><span class="pre">get_object_or_404</span></tt><a class="headerlink" href="index.html#get-object-or-404" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.get_object_or_404">
<!--[django.shortcuts.get_object_or_404]--><tt class="descname">get_object_or_404</tt>(<em>klass</em>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="index.html#django.shortcuts.get_object_or_404" title="Permalink to this definition">¶</a></dt>
<dd>Calls <tt class="xref docutils literal"><span class="pre">get()</span></tt> on a given model manager,
but it raises <tt class="docutils literal"><span class="pre">django.http.Http404</span></tt> instead of the model's
<tt class="docutils literal"><span class="pre">DoesNotExist</span></tt> exception.</dd></dl>

<div class="section" id="s-id1">
<span id="id1"></span><h3>Required arguments<a class="headerlink" href="index.html#id1" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">klass</span></tt></dt>
<dd>A <tt class="docutils literal"><span class="pre">Model</span></tt>, <tt class="docutils literal"><span class="pre">Manager</span></tt> or <tt class="docutils literal"><span class="pre">QuerySet</span></tt> instance from which to get the
object.</dd>
<dt><tt class="docutils literal"><span class="pre">**kwargs</span></tt></dt>
<dd>Lookup parameters, which should be in the format accepted by <tt class="docutils literal"><span class="pre">get()</span></tt> and
<tt class="docutils literal"><span class="pre">filter()</span></tt>.</dd>
</dl>
</div>
<div class="section" id="s-id2">
<span id="id2"></span><h3>Example<a class="headerlink" href="index.html#id2" title="Permalink to this headline">¶</a></h3>
<p>The following example gets the object with the primary key of 1 from
<tt class="docutils literal"><span class="pre">MyModel</span></tt>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.shortcuts</span> <span class="k">import</span> <span class="n">get_object_or_404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_object</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">MyModel</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="mf">1</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.http</span> <span class="k">import</span> <span class="n">Http404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">my_object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">pk</span><span class="o">=</span><span class="mf">1</span><span class="p">)</span>
    <span class="k">except</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">DoesNotExist</span><span class="p">:</span>
        <span class="k">raise</span> <span class="n">Http404</span>
</pre></div>
</div>
<p>Note: As with <tt class="docutils literal"><span class="pre">get()</span></tt>, an <tt class="docutils literal"><span class="pre">MultipleObjectsReturned</span></tt> exception will be
raised if more than one object is found.</p>
</div>
</div>
<div class="section" id="s-get-list-or-404">
<span id="get-list-or-404"></span><h2><tt class="docutils literal"><span class="pre">get_list_or_404</span></tt><a class="headerlink" href="index.html#get-list-or-404" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.get_list_or_404">
<!--[django.shortcuts.get_list_or_404]--><tt class="descname">get_list_or_404</tt>(<em>klass</em>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="index.html#django.shortcuts.get_list_or_404" title="Permalink to this definition">¶</a></dt>
<dd>Returns the result of <tt class="xref docutils literal"><span class="pre">filter()</span></tt> on a
given model manager, raising <tt class="docutils literal"><span class="pre">django.http.Http404</span></tt> if the resulting list
is empty.</dd></dl>

<div class="section" id="s-id3">
<span id="id3"></span><h3>Required arguments<a class="headerlink" href="index.html#id3" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">klass</span></tt></dt>
<dd>A <tt class="docutils literal"><span class="pre">Model</span></tt>, <tt class="docutils literal"><span class="pre">Manager</span></tt> or <tt class="docutils literal"><span class="pre">QuerySet</span></tt> instance from which to get the
object.</dd>
<dt><tt class="docutils literal"><span class="pre">**kwargs</span></tt></dt>
<dd>Lookup parameters, which should be in the format accepted by <tt class="docutils literal"><span class="pre">get()</span></tt> and
<tt class="docutils literal"><span class="pre">filter()</span></tt>.</dd>
</dl>
</div>
<div class="section" id="s-id4">
<span id="id4"></span><h3>Example<a class="headerlink" href="index.html#id4" title="Permalink to this headline">¶</a></h3>
<p>The following example gets all published objects from <tt class="docutils literal"><span class="pre">MyModel</span></tt>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.shortcuts</span> <span class="k">import</span> <span class="n">get_list_or_404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_objects</span> <span class="o">=</span> <span class="n">get_list_or_404</span><span class="p">(</span><span class="n">MyModel</span><span class="p">,</span> <span class="n">published</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">from</span> <span class="nn">django.http</span> <span class="k">import</span> <span class="n">Http404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_objects</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">my_objects</span><span class="p">:</span>
        <span class="k">raise</span> <span class="n">Http404</span>
</pre></div>
</div>
</div>
</div>
</div>



<div id="content-secondary">
  <h2 id="comments">Questions/Feedback</h2>
  <p>Having trouble? We'd like to help!</p>
  <ul>
    <li>
      Try the <a href="../../../faq/index.html">FAQ</a> — it's got answers to many common
      questions.
    </li>
    <li>
      Search for information in the <a
      href="http://groups.google.com/group/django-users/">archives of the
      django-users mailing list</a>, or <a
      href="http://groups.google.com/group/django-users/">post a question</a>.
    </li>
    <li>
      Ask a question in the <a href="irc://irc.freenode.net/">#django IRC
      channel</a>, or search the <a href="http://oebfare.com/logger/django/">IRC
      logs</a> to see if its been asked before.
    </li>
    <li>
      If you notice errors with this documentation, please <a
      href="http://code.djangoproject.com/simpleticket?component=Documentation">
      open a ticket</a> and let us know! Please only use the ticket tracker for
      criticisms and improvements on the docs. For tech support, use the
      resources above.
    </li>
  </ul>
</div>

		</div>
		<!-- END #content-main -->
		<div id="content-related" class="sidebar">
		
  
    <h2>Contents</h2>
    
      <ul>
<li><a class="reference external" href="index.html">Django shortcut functions</a><ul>
<li><a class="reference external" href="index.html#render-to-response"><tt class="docutils literal"><span class="pre">render_to_response</span></tt></a><ul>
<li><a class="reference external" href="index.html#required-arguments">Required arguments</a></li>
<li><a class="reference external" href="index.html#optional-arguments">Optional arguments</a></li>
<li><a class="reference external" href="index.html#example">Example</a></li>
</ul>
</li>
<li><a class="reference external" href="index.html#redirect"><tt class="docutils literal"><span class="pre">redirect</span></tt></a><ul>
<li><a class="reference external" href="index.html#examples">Examples</a></li>
</ul>
</li>
<li><a class="reference external" href="index.html#get-object-or-404"><tt class="docutils literal"><span class="pre">get_object_or_404</span></tt></a><ul>
<li><a class="reference external" href="index.html#id1">Required arguments</a></li>
<li><a class="reference external" href="index.html#id2">Example</a></li>
</ul>
</li>
<li><a class="reference external" href="index.html#get-list-or-404"><tt class="docutils literal"><span class="pre">get_list_or_404</span></tt></a><ul>
<li><a class="reference external" href="index.html#id3">Required arguments</a></li>
<li><a class="reference external" href="index.html#id4">Example</a></li>
</ul>
</li>
</ul>
</li>
</ul>

    
  
  
  
    <h2>Search</h2>
    
    <form action="../../../search/index.html" id="search" class="search">
  <div>
    <input type="hidden" name="cx" value="009763561546736975936:e88ek0eurf4" />
    <input type="hidden" name="cof" value="FORID:11" />
    <input type="hidden" name="ie" value="UTF-8" />
    <input type="hidden" name="hl" value="" />
    <input id="id_search_q" type="text" class="query" name="q" />
    <input type="submit" name="sa" class="submit" value="Search" />
    <ul>
<li><label for="id_search_as_q_0"><input checked="checked" type="radio" id="id_search_as_q_0" value="more:dev_docs" name="as_q" /> Latest</label></li>
<li><label for="id_search_as_q_1"><input type="radio" id="id_search_as_q_1" value="more:1.0_docs" name="as_q" /> 1.0</label></li>
<li><label for="id_search_as_q_2"><input type="radio" id="id_search_as_q_2" value="more:0.96_docs" name="as_q" /> 0.96</label></li>
<li><label for="id_search_as_q_3"><input type="radio" id="id_search_as_q_3" value="more:all_docs" name="as_q" /> All</label></li>
</ul>
  </div>
</form>
<script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=search&amp;lang="></script>
  
  
  
    <h2>Browse</h2>
    <ul>
      
        
          <li>Prev: <a href="../file-uploads/index.html">File Uploads</a></li>
        
        
          <li>Next: <a href="../generic-views/index.html">Generic views</a></li>
        
        <li><a href="../../../contents/index.html">Table of contents</a></li>
        
          <li><a href="../../../genindex/index.html">General Index</a></li>
        
          <li><a href="../../../modindex/index.html">Global Module Index</a></li>
        
      
    </ul>
  
  
  
    <h2>You are here:</h2>
    <ul>
      
        <li>
          <a href="../../../index.html">Django dev documentation</a>
          
            <ul><li><a href="../../index.html">Using Django</a>
          
            <ul><li><a href="../index.html">Handling HTTP requests</a>
          
          <ul><li>Django shortcut functions</li></ul>
          </li></ul></li></ul>
        </li>
      
    </ul>
  
  
  
    <h3>Last update:</h3>
    <div>November 19, 2009, 4 p.m. (<a href="http://www.timeanddate.com/worldclock/city.html?n=64">CDT</a>)</div>
  

		</div>
		<!-- END #content-related -->

		</div>
		<!-- END #content -->
		<div id="footer">
			<p>&copy; 2005-2009 <a href="http://www.djangoproject.com/foundation/">Django Software Foundation</a> unless otherwise noted. Django is a registered trademark of the Django Software Foundation. 
			Hosting graciously provided by <a href="http://mediatemple.net/">
			<img style="vertical-align: middle; position: relative; top: -1px;" src="http://media.djangoproject.com/img/site/mt.png" alt="media temple" /></a>
			</p>
		</div>
		<!-- END #footer -->
	</div>
	<!-- END #container -->
	</body>
</html>

